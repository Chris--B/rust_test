#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(local_size_x_id = 8, local_size_y_id = 8) in;

layout (binding = 0) uniform UBO {
	uvec2 src_dimensions;
    uint dst_dimensions;	// pow2 y dimension of mip 0 (texture x is 1.5x wider)
} ubo;

layout (binding = 1, r32f) uniform readonly image2D src_tex;
layout (binding = 2, r32f) uniform writeonly image2D dst_tex;

void main() {
    ivec2 xy = ivec2(gl_GlobalInvocationID.xy);
    vec2 step = vec2(ubo.src_dimensions) / float(ubo.dst_dimensions);
    
    ivec2 rect_min = ivec2(vec2(xy) * step);
    ivec2 rect_max = ivec2(vec2(xy + ivec2(1, 1)) * step);
    
    // Could use image gather to make loop 2x2 shorter
    float z_min = 1.0;
    for (int y = rect_min.y; y < rect_max.y; ++y)
    {
	    for (int x = rect_min.x; x < rect_max.x; ++x)
        {
            float z = imageLoad(src_tex, ivec2(x, y)).x;
            z_min = min(z_min, z);
        }
    }
    
    imageStore(dst_tex, xy, vec4(z_min,0.0,0.0,0.0));
}
